plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id "org.asciidoctor.jvm.convert" version "3.3.2"
	id 'java'
}

group = 'kr.co'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	snippetsDir = file('build/generated-snippets')
}


bootJar {
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"
		into 'BOOT-INF/classes/static/docs'
	}
}

repositories {
	mavenCentral()
}




dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
	//s3 fileUpload
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-aws
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.1.RELEASE'


	implementation 'org.springframework.boot:spring-boot-configuration-processor:'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'com.querydsl:querydsl-jpa'

	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:'
	testImplementation 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'io.rest-assured:spring-mock-mvc:4.5.1'

//	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
//	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'


}



test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}





task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

// clean task 실행시 QClass 삭제
clean {
	delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성 위치
}


//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}



jar {
	enabled = false
}